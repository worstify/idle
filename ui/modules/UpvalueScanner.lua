local a=game:GetService("RunService")local b=game:GetService("TextService")local c={}local d=import("modules/ClosureSpy")local e=import("modules/UpvalueScanner")if not hasMethods(e.RequiredMethods)then return c end local f=import("objects/Upvalue")local g=import("ui/controls/Prompt")local h=import("ui/controls/CheckBox")local i=import("ui/controls/Dropdown")local j,k=import("ui/controls/List")local l=import("ui/controls/TabSelector")local m,n=import("ui/controls/MessageBox")local o,p=import("ui/controls/ContextMenu")local q=(import("rbxassetid://5042109928")).Base local r=(import("rbxassetid://5042114982")).UpvalueScanner local s=q.Prompts local t=q.Body.Pages.UpvalueScanner local u=t.Query local v=u.Search local w=u.Query local x=t.Filters local y=t.Results.Clip local z=y.ResultStatus local A=g.new(s.ModifyUpvalue)local B=g.new(s.ModifyElement)local C=h.new(x.SearchInTables)local D=j.new(y.Content)local E=false local F={}local G local H local I local J local K=p.new("rbxassetid://4666593447","Spy Closure")local L=p.new("rbxassetid://5179169654","View All Upvalues")local M=p.new("rbxassetid://5458573463","Change Upvalue")local N=p.new("rbxassetid://5458573463","Change Upvalue")local O=p.new("rbxassetid://5179169654","View All Elements")local P=p.new("rbxassetid://5458573463","Change Element")local Q=p.new("rbxassetid://4800244808","Generate Script")local R=p.new("rbxassetid://4800244808","Generate Script")local S=p.new("rbxassetid://4800244808","Generate Script")local T=p.new("rbxassetid://4891705738","Get Script Path")local U=o.new({K,L;T})local V=o.new({N,O,R})local W=o.new({M,Q})local X=o.new({P,S})local Y=A.Instance.Inner local Z=Y.Content local ab=Y.Buttons.SetCancel local bb=Z.Type local cb=Z.Value.Input local db=B.Instance.Inner local eb=db.Content local fb=db.Buttons.SetCancel local gb=eb.Type local hb=eb.Value.Input local ib=i.new(bb)local jb=i.new(gb)local kb={tempElementColor=Color3.fromRGB(30,10,10),tempUpvalueColor=Color3.fromRGB(40,20,20);tempBorderColor=Color3.fromRGB(20,0,0)}local function lb()m.Show("Error","Value does not match selected type",n.OK)end local function mb(a,b,c,d,e)local f=r.Element:Clone()local g=type(c)local h=type(d)local i=toString(c)if e then f.ImageColor3=kb.tempElementColor f.Border.ImageColor3=kb.tempBorderColor end f.Name=i f.Index.Label.Text=i f.Value.Label.Text=toString(d)f.Index.Label.TextColor3=oh.Constants.Syntax[g]f.Index.Icon.Image=oh.Constants.Types[g]f.Value.Label.TextColor3=oh.Constants.Syntax[h]f.Value.Icon.Image=oh.Constants.Types[h]f.MouseButton2Click:Connect(function()H=b I=a J=c jb:SetSelected(typeof(d))X:Show()end)return f end local function nb(a,b,c)local d=toString(b)local e=type(b)local f=type(c)local g=a.Elements:FindFirstChild(d)g.Index.Label.Text=d g.Value.Label.Text=toString(c)g.Index.Label.TextColor3=oh.Constants.Syntax[e]g.Value.Label.TextColor3=oh.Constants.Syntax[f]g.Value.Icon.Image=oh.Constants.Types[e]g.Value.Icon.Image=oh.Constants.Types[f]g.Parent=a.Elements end local function ob(a,b)local c local d=a.Index local e=a.Value local f=type(e)if f=="table"then c=r.Table:Clone()local d=25 if b then c.ImageColor3=kb.tempUpvalueColor c.Border.ImageColor3=kb.tempBorderColor end if not b then for b,e in pairs(a.Scanned)do local f=mb(c,a,b,e)f.Parent=c.Elements d=(d+f.AbsoluteSize.Y)+5 end end c.Size=UDim2.new(1,0,0,d)else c=r.Upvalue:Clone()if b then c.ImageColor3=kb.tempUpvalueColor c.Border.ImageColor3=kb.tempBorderColor end if f=="function"then local a=(getInfo(e)).name or""c.Value.Text=a==""and"Unnamed function"or a else c.Value.Text=toString(e)end end c.Name=d c.Index.Text=d c.Value.TextColor3=oh.Constants.Syntax[f]c.Icon.Image=oh.Constants.Types[f]c.MouseButton2Click:Connect(function()H=a I=c ib:SetSelected(typeof(a.Value))if a.Scanned then V:Show()else W:Show()end end)return c end local function pb(a,b)local c=a.Instance.Upvalues[tostring(b.Index)]local d=b.Closure local e=b.Index local f=getUpvalue(d,e)local g=type(f)if g=="function"then local a=(getInfo(f)).name or""c.Value.Text=a==""and"Unnamed function"or a elseif g=="table"and b.Scanned then for a,b in pairs(b.Scanned)do nb(c,a,b)end if b.TemporaryElements then local a=b.Value for b,d in pairs(b.TemporaryElements)do nb(c,b,a[b])end end else c.Value.Text=toString(f)end c.Value.TextColor3=oh.Constants.Syntax[g]c.Icon.Image=oh.Constants.Types[g]b:Update(f)end local qb={}function qb.new(a)local b={}local c=r.ClosureLog:Clone()local d=k.new(c,D)local e=30 b.Instance=c b.Closure=a b.Upvalues={}b.Update=qb.update for a,d in pairs(a.Upvalues)do local f=ob(d)f.Parent=c.Upvalues e=(e+f.AbsoluteSize.Y)+5 b.Upvalues[a]=f end c.Size=UDim2.new(1,0,0,e);(c:FindFirstChild("Name")).Text=a.Name d:SetRightCallback(function()G=b end)F[a.Data]=b D:Recalculate()return b end function qb.update(a)for b,c in pairs(a.Closure.Upvalues)do pb(a,c)end for b,c in pairs(a.Closure.TemporaryUpvalues)do pb(a,c)end end local function rb()local a=w.Text if a:gsub(" ","")~=""then if not tonumber(a)and a:len()<=1 then return end local b={}local c=false D:Clear()F={}for a,d in pairs(e.Scan(a,E))do if d.Name==""then b[d.Data]=d else qb.new(d)end c=true end for a,b in pairs(b)do qb.new(b)end z.Visible=c D:Recalculate()else m.Show("Invalid query","Your query is too short",n.OK)end w.Text=""end D:BindContextMenu(U)C:SetCallback(function(a)E=a if a then m.Show("Notice","Deep searching may result in longer scan times!",n.OK)end end)v.MouseButton1Click:Connect(rb)w.FocusLost:Connect(function(a)if a then rb()end end)local function sb(a,b,c)local d=a local e=typeof(b)local f if e=="string"then f=d elseif e=="number"then local a=tonumber(d)if a then f=a else lb()end elseif e=="boolean"then if d=="true"then f=true elseif d=="false"then f=false else lb()end else local a,b=pcall(loadstring("return "..d))if a then if typeof(b)==c.Selected.Name then f=b else lb()end else m.Show("Error","There is an error in your input",n.OK)end end return f end local function tb(a,b)local c=a.Instance local d=oh.Constants.Types[b.Name]or oh.Constants.Types.userdata c.Icon.Image=d end ab.Set.MouseButton1Click:Connect(function()local a=sb(cb.Text,H.Value,ib)if a~=nil then H:Set(a)cb.Text=""A:Hide()end end)ab.Cancel.MouseButton1Click:Connect(function()cb.Text=""A:Hide()end)fb.Set.MouseButton1Click:Connect(function()local a=H.Value local b=sb(hb.Text,a[J],jb)if b~=nil then a[J]=b hb.Text=""B:Hide()end end)fb.Cancel.MouseButton1Click:Connect(function()hb.Text=""B:Hide()end)ib:SetCallback(tb)jb:SetCallback(tb)local function ub(a)local b="-- Generated by Hydroxide\n\nlocal aux = loadstring(game:HttpGetAsync(\"https://raw.githubusercontent.com/worstify/Hydroxide/revision/ohaux.lua\"))()\n\nlocal scriptPath = %s\nlocal closureName = \"%s\"\nlocal upvalueIndex = %d\nlocal closureConstants = %s\n\nlocal closure = aux.searchClosure(scriptPath, closureName, upvalueIndex, closureConstants)\nlocal value = YOUR_NEW_VALUE_HERE\n"if a and a~="nil"then b=b..("local elementIndex = %s\n"):format(a)b=b.."\n\n-- DO NOT RELY ON THIS FEATURE TO PRODUCE %s FUNCTIONAL SCRIPTS\n"return b.."debug.getupvalue(closure, upvalueIndex)[elementIndex] = value"end return b.."\n\n-- DO NOT RELY ON THIS FEATURE TO PRODUCE %s FUNCTIONAL SCRIPTS\ndebug.setupvalue(closure, upvalueIndex, value)"end local function vb(a)local b=H.Index local c=H.Closure local d=c.Data local e=rawget(getfenv(d),"script")local f=ub(dataToString(a))local g={}local h=0 if e and not e.Parent then e=nil end for a,b in pairs(getConstants(d))do if h>5 then break elseif type(b)~="function"then g[a]=b h=h+1 end end setClipboard(f:format(e and getInstancePath(e)or"nil",c.Name,b,tableToString(g),"100%"))end Q:SetCallback(function()vb()end)R:SetCallback(function()vb()end)S:SetCallback(function()vb(J)end)local wb=d.Hook K:SetCallback(function()local a=G.Closure if l.SelectTab("ClosureSpy")then local b=wb.new(a)if b==false then m.Show("Already hooked","You are already spying "..a.Name)elseif b==nil then m.Show("Cannot hook",("Cannot hook \"%s\" because there are no upvalues"):format(a.Name))end end end)L:SetCallback(function()if G then local a=G.TemporaryUpvalues local b=G.Instance local c=0 if a then for a,b in pairs(a)do c=c-(b.AbsoluteSize.Y+5)b:Destroy()end G.TemporaryUpvalues=nil G.Closure.TemporaryUpvalues={}else local d=G.Closure a={}for e,g in pairs(getUpvalues(d))do if not d.Upvalues[e]then local h=f.new(d,e,g)if type(g)=="table"then h.Scanned={}end local i=ob(h,true)i.Parent=b.Upvalues c=(c+i.AbsoluteSize.Y)+5 a[e]=i d.TemporaryUpvalues[e]=h end end G.TemporaryUpvalues=a end c=UDim2.new(0,0,0,c)b.Upvalues.Size=b.Upvalues.Size+c b.Size=b.Size+c D:Recalculate()end end)T:SetCallback(function()if G then local a=(getfenv(G.Closure.Data)).script if typeof(a)=="Instance"then setClipboard(getInstancePath(a))end end end)O:SetCallback(function()local a=H and H.TemporaryElements local b=0 if a then for a,c in pairs(a)do local d=I.Elements[toString(a)]b=b-(d.AbsoluteSize.Y+5)d:Destroy()end H.TemporaryElements=nil else local c=H.Scanned a={}for d,e in pairs(H.Value)do if not c[d]then local c=mb(I,H,d,e,true)c.Parent=I.Elements b=(b+c.AbsoluteSize.Y)+5 a[d]=c end end H.TemporaryElements=a end b=UDim2.new(0,0,0,b)I.Size=I.Size+b I.Parent.Parent.Size=I.Parent.Parent.Size+b D:Recalculate()end)local function xb()if H then local a=H.Index local c=Z.Index local d=c.Number local e=(b:GetTextSize(tostring(a),18,"SourceSans",c.AbsoluteSize)).X d.Text=a d.Size=UDim2.new(0,e,0,25)A:Show()end end M:SetCallback(xb)N:SetCallback(xb)P:SetCallback(function()if H and J then local a=J local c=type(a)local d=eb.Index local e=d.Data local f=(b:GetTextSize(a,18,"SourceSans",d.AbsoluteSize)).X e.Text=a e.TextColor3=oh.Constants.Syntax[c]e.Size=UDim2.new(0,f,0,25)B:Show()end end)oh.Events.UpdateUpvalues=a.Heartbeat:Connect(function()for a,b in pairs(F)do b:Update()end end)return c