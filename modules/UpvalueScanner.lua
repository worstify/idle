local a={}local b=import("objects/Closure")local c=import("objects/Upvalue")local d={["getGc"]=true,["getInfo"]=true,["isXClosure"]=true,["getUpvalue"]=true,["setUpvalue"]=true,["getUpvalues"]=true}local function e(f,g,h)local i=type(g)local j=i=="string"and(f==g or g:lower():find(f:lower()))local k=not h and i=="number"and not isTableIndex and(tonumber(f)==g or("%.2f"):format(g)==f)if i=="userdata"then if typeof(i)=="Instance"then local l=g.Name;return l==f or l:find(f)end;return toString(g)==f elseif i=="function"then local m=getInfo(g).name or''return f==m or m:lower():find(f:lower())end;return j or k or userDataCheck end;local function n(f,o)local p={}for q,r in pairs(getGc())do if type(r)=="function"and not isXClosure(r)and not p[r]then for s,t in pairs(getUpvalues(r))do local u=type(t)if u~="table"and e(f,t)then local v=p[r]if not v then local w=b.new(r)w.Upvalues[s]=c.new(w,s,t)p[r]=w else v.Upvalues[s]=c.new(v,s,t)end elseif o and u=="table"then local v=p[r]local x;for y,z in pairs(t)do if y~=t and z~=t and(e(f,y,true)or e(f,z))then if not v then local w=b.new(r)v=w;p[r]=w end;if not x then x=c.new(v,s,t)x.Scanned={}v.Upvalues[s]=x end;x.Scanned[y]=z end end end end end end;return p end;a.Scan=n;a.RequiredMethods=d;return a